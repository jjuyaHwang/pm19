body, ul, dl, dt, dd, figure{
    margin: 0;
    padding: 0;
}

ul {
    list-style: none;
}

div {
    margin-bottom: 30px;
}

/* 
    ? display의 속성은 총 4가지
    * block = block이 되게 되면 width:100%의 값을 갖는 위에서 아래로 나열되는 객체가 된다.
    * inline-block = inline-block이 되면 width의 값을 가질 수 있고,
    *                inline타입으로 (옆으로) 나열되는 객체가 된다.
    * inline = inline이 되면 width등의 크기나 간격등의 값을 가질수 없고
    *          옆으로는 나열 되지만, 간격을 벌릴 수 없는 객체가 된다.
    * none = 대상이 보이지 않는다. (렌더 자체가 안된다.)
 */

 .displayProperty span:nth-child(1){
    display: block;
    background-color: coral;
    width: 50%;
 }

 .displayProperty span:nth-child(2){
    display: inline-block;
    background-color: red;
    width: 25%;
 }

 .displayProperty span:nth-child(3) {
    display: inline;
    background-color: blue;
 }

 .displayProperty span:nth-child(4) {
    display: none;
 }


 /* 
    ? visibility의 속성은 총 3가지 
    * visibility : visible = 보여주다.
    * visibility : hidden = 감추다.(영역보존)
    * visibility : collapse = 테이블만 감추다.
  */

  .visibilityProperty span{
    background-color: orange;
    display: block;
    border: 1px solid black;
  }

  .visibilityProperty span:first-child {
    visibility: visible;
  }

  .visibilityProperty span:nth-child(2){
    visibility: hidden; 
  }

  .visibilityProperty input[type="checkbox"]:checked ~ table {
    visibility: visible;
  }

  .visibilityProperty table {
    visibility: collapse;
    border-spacing: 0;
  }

  /*
    ! opacity 의 값은 객체의 투명도를 설정하여 0 ~ 1 로 규정 할 수 있고 1/100% 로 표현된다. 
   */

   .opacityProperty ul::after {
    content: '';
    display: block;
    visibility: hidden;
    clear: both;
   }

  .opacityProperty ul li {
    display: block;
    float: left;
    width: 33%;
    background-color: black;
    position: relative;
  }

  .opacityProperty ul li:not(:first-child){
    margin-left: 0.5%;
  }


  .opacityProperty ul li figure img {
    width: 100%;
    display: block;
    opacity: 0.3;
    transition-duration: 0.5s;
  }

  .opacityProperty ul li figure figcaption {
    position: absolute;
    width: 25%;
    height: 15%;
    background-color: rgba(255, 255, 255, 0.5);
    text-align: center;
    left: 37.5%;
    top: 42.5%;
    padding: 5%;
    transition-duration: 0.5s;
  }

  .opacityProperty ul li:hover figure img{
    opacity: 1;
  }

  .opacityProperty ul li:hover figure figcaption{
    top: -15%;
    opacity: 0;
  }

  .boxsizingProperty div {
    width: 500px;
    margin: 0 auto;
    border: 10px solid orangered;
    background-color: slategray;
    padding: 50px;
  }

  .boxsizingProperty div:first-child {
    box-sizing: content-box;
  }
  .boxsizingProperty div:last-child {
    box-sizing: border-box;
  }


  /*
    * content-box 속성은 기본적으로 적용되는 (default)값,
    * 안의 공간을 해당 width로 잡고 밖에 padding, border를 추가
    * 계산하여 총 width 를 구하는방식
    
    
    * border-box 속성은 전체 크기를 먼저 width를 잡고 안의 padding, border 를 나중에 계산하는 
    
    * content-box : box in width + padding + border = width
    * border-box : width = box in width - (padding + border)
   */

   .shadowProperty h1 {
    text-shadow: 5px 10px 10px rgba(0, 0, 0, 0.5);
   }

   .shadowProperty p {
    width: 300px;
    height: 300px;
    border: 3px solid #f00;
   }

   .shadowProperty p:first-of-type {
    box-shadow: 8px 10px 2px rgba(255, 145, 145, 0.5);
   }

   .shadowProperty p:last-of-type {
    box-shadow: inset 8px 10px 2px rgba(255, 145, 145, 0.5);
   }

   /* 
    * shadow: 우측으로 간격,
    *         하단으로 간격,
    *         흐림도(우측, 하단간격 너비의 영향 받음),
    *         그림자 컬러 또한 속성값 앞에 inset을 삽입하면 내부그림자로 전환

    * 보다 쉽게 만들기
    * http://css3generator.com 에서 값입력후 소스코드생성
    */





