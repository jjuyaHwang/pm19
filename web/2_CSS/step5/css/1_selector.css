.tagSelector h1{
    font-size: 20px;
    color: green;
}

.tagSelector p{
    font-size: 15px;
    color: red;
}

.tagSelector span {
    font-size: 10px;
    color: yellow;
}

/* ? 태그선택자 사용법 */

.idSelector p#paragraph1{
    font-size: 20px;
    background-color: green;
}
.idSelector p#paragraph2{
    font-size: 10px;
    background-color: orange;
}
.idSelector p#paragraph3{
    font-size: 20px;
    background-color: blue;
}

/* ? ID선택자 사용법 */

.classSelector .f_size {
    font-size: 20px;
}

.classSelector .f_weight {
    font-weight: bold;
}

.classSelector .f_color {
    color: blue;
}

/* ? class 선택자 사용법 + 다중 클래스 지정 */

.sameSelector h1~h2 {
    background-color: blue;
}

.sameSelector h1+h2{
    font-size: 40px; color: blueviolet;
}

/*
    ? 동위선택자일떄만!
    ? A~B는 A뒤에 있는 B모두를 선택한다. (최초기준이 되는 tag만 효력이 있다.)
    ? A+B는 A바로 뒤에 위치하는 B를 선택한다.
 */

 .stringAttrSelector img[src$='png']{
    width: 100px;
    border: 3px solid red;
 }

 .stringAttrSelector img[src$='jpg']{
    width: 200px; border: 5px solid green;
 }

 .stringAttrSelector img[src$='gif']{
    width: 300px; border: 10px solid blue;
 }

 /*
    ? 속성값일치선택자.
    ? $= : 해당 단어로 끝나는 대상 선택.
    ? *= : 해당 단어가 들어가는 모든 대상 선택. (전,후 상관없음)
    ? ^= : 해당 단어로 시작하는 것만 선택.
    ? /= : 해당 단어로 시작하거나 -으로 구분되는 대상 선택.
    ? ~= : 띄어쓰기 기준. 해당 단어 포함. 
  */

  /* ! 남자로 시작되는 태그들만 color blue 로 변경 해보시오. */
  /* ! 제목 이 들어가는 태그들만 color red 로 변경 해보시오. */

  .stringAttrSelector h1[title ^= 남자]{
    color: blue;
  }

  .stringAttrSelector h1[title *= 제목]{
    color: red;
  }

  .statusSelector input[type="checkbox"]+label {
    overflow: hidden;
    display: inline-block;
    height: 20px;
  }

  .statusSelector input[type="checkbox"]:checked + label {
    height: 0px;
  }

  /* 
    ? input 상태에 따라 대상을 작동 시킬 수 있다.
    ? 1. checkbox의 상태가 checked 일 경우 바로 뒤에 label 을 height:0px 로 만든다.
    ? (상태옵션은 :checked 체크된 input 상태, 
    ?   :focus 초점이 맞춰진 input 상태,
    ?   :enabled 사용가능한 input 상태,
    ?   :disabled 사용 불가능한 input 상태)

    ? 2. label의 기본설정을 잡는다. 이부분에서 height의 값이 있어야만 애니메이션이 일어난다.
    ?    또한 display옵션을 block 계열로 잡아야 하며, 
    ?    overflow의 값은  hidden으로 설정해둔다.(사라지는 값)

  */

  .statusSelector input[type="text"]:focus{
    border: 10px solid red;
  }

  .statusSelector input[type="text"]:enabled {
    background-color: black; color: white;
  }

  .virtualSelector ul{
    overflow: hidden;
    list-style: none;
    margin: 30px 0;
    padding: 0;
  }

  /*
    ? float 해제 방법
    ? float 대상의 바로 윗 부모에게
    ? ex) 1. :after {content:''; display:block; clear:both; visibility:hidden;} 
    ?     2. 다음 객체에게 clear:both;
    ?     3. 위에 부모에게 overflow:hidden;
   */

  .virtualSelector ul li{
    float: left;
    padding: 15px;
    box-sizing: border-box;
    text-align: center;
    margin: 0;
    width: 14.28%;
  }

  .virtualSelector table {
    width: 100%;
    border-width: 3px 1px 2px 1px;
    border-style: solid;
    border-color: skyblue;
  }

  .virtualSelector table caption {
    font-size: 12px;
    color: #666;
    line-height: 40px;
  }

  .virtualSelector table tr th,
  .virtualSelector table tr td {
    width: 14.28%;
    border-right: 1px solid skyblue;
    border-bottom: 1px solid skyblue;
    padding: 10px 0;

  }

  .virtualSelector table tr th {
    background-color: skyblue;
  }

  .virtualSelector table tr td {
    text-align: center;
  }

  .textSelector h1::first-letter{
    font-size: 100px;
    color: red
  }

  .textSelector p::first-line{
    color: yellow;
    font-size: 14px;
    text-decoration: underline;
  }

  .reactionSelector > * {
    color: white;
  }

  .reactionSelector > *::selection {
    background-color: black;
    color: yellow;
  }

  /* 
    ? ::selection 선택자엔 아래 4가지 속성만 사용 가능.
    ? color, background, cursor, outline
   */

   .notSelector input:not([type="password"],[type="submit"]){
    background-color: red;
   }