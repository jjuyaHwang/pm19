@charset "utf-8";
/* css document */

@import url('https://fonts.googleapis.com/css2?family=Nanum+Gothic:wght@400;700;800&display=swap');

body{
    font-family: 'Nanum Gothic', sans-serif;
}

h1 {
    font-size: 20px; 
    line-height: 25px;
    color: blue;
}
/* ? font-size 제일 기본 값이 16px */
/* 
    ? font가 들어가는 부분은 무조건 line-height를 설정해야 하는데,
    ? 그 이유는 block 속성이 아닌 태그들에게 line-height 를 지정하지않게 되면 폰트의 영역이
    ? (컨텐츠의 영역이) 무시되는 경우가 있으며, block 속성이라 하여도, text가 길 경우 
    ? 줄바꿈이 이루어졌을때 윗줄과 아랫줄의 줄간이 없어 글자들이 붙거나 겹치는 현상이 있기때문이다.
 */

h2{
    font-size: 15px;
    line-height: 21px;
    color: #966;
}

p.letter{
    letter-spacing: 10px;  /* ? letter-spacing : 자간 */
}

p.word{
    word-spacing: 10px; /* ? word-spacing : 단어간격(space bar 기준) */
}

p.W_normal{
    width: 150px; white-space: normal; line-height: 21px;
}
/*
    ? white-space 란? 
    ? 요소의 공백을 어떻게 처리할지를 정의해줄수 있는 속성값
    ? white-space 의 속성값(normal, nowrap, pre, pre-wrap, pre-line)
    ? normal :  연속된 공백과 줄 바꿈은 메꾸어져서 하나의 공백으로 표시됨.
    ? nowrap : normal과 같이 공백을 채우지만 가로로 긴 줄에서도 줄 바꿈을 하지 않고 표시됨.
    ? pre : 연속된 공백을 그대로 표시. 또한 긴 줄도 줄 바꿈하지 않고 표시함.
    ? pre-wrap : 연속 공백은 그대로 유지됨. 행의 줄 바꿈은 행의 박스를 채우기 위해 필요할경우 실행.
    ? pre-line : 연속 공백은 메꾸어져 하나의 공백이 됨. 행의 줄 바꿈은 행의 박스를 메꾸기 위해 
    ?            필요한 떄에 실행됨.
 */

 p.W_nowrap {
    width: 150px; white-space: nowrap; 
 }

 div.v_alignTest img{
    width: 200px;
    vertical-align: middle;
 }

 /*
    ? baseline : 문자의 밑선에 맞추어 정렬(default)
    ? middle : 문자의 중앙을 기준으로 정렬
    ? sub : 아래첨자
    ? super : 위 첨자
    ? text-top : 문자의 윗선을 밑선으로 해서 정렬
    ? top : 위쪽에 정렬
    ? bottom : 아래쪽으로 정렬
    ? % : 퍼센트로 정렬 위치를 지정(
    ?    후처리 = 높이가 낮은 대상. 그 대상의 높이기준
    ?    또한 선처리 된 vertical-align 의 방향에 따라 적용 기준 달라짐 (ex> top이면 +% 불가)
  */

  /* 
    ? vertical-align (수직정렬)
    * 1. display: inline, inline-block인 애들끼리만.
    * 2. 높은 애를 기준으로 preset(ex> top, middel, bottom .....)
    * 3. 작은 애가 높은 애를 기준으로 움직임
    * 4. 작은 애에게 상대적 수치 (%) 를 이용하여 나머지 부분을 더 움직일 수 있다.
    ! 작은 애의 높이를 기준으로 100%를 잡고, 양수일 경우 위로, 음수일 경우 아래로 
  */

div.v_alignTest span{
    vertical-align: 30%;
}

p.t_indent {
    font-size: 40px;
    text-indent: 100px;
}

.test {
    text-indent: -9999px;
    background: url("http://via.placeholder.com/150x150");
    border: none;
    width: 150px;
    line-height: 50px;
}

a{
    display: block;
}

a.t_deco_N {
    text-decoration: none;
}

a.t_deco_U {
    text-decoration: underline;
}

a.t_deco_O{
    text-decoration: overline;
}

a.t_deco_T{
    text-decoration: line-through;
}

/*
    ? none : 선을 없앰
    ? line-through : 글자 중간에 선을 만듦
    ? overline : 글자 위에 선을 만듦
    ? underline : 글자 아래에 선을 만듦
    ? initial : 기본값으로 설정
    ? inherit : 부모 요소의 속성값을 상속받음
 */

 /*
    ? text-transform 속성들
    ? none: 입력된 그대로 출력
    ? capiatlize : 단어의 첫번쨰 글자를 대문자로 바꿈
    ? uppercase : 모든 글자를 대문자로 바꿈
    ? lowercase : 모든 글자를 소문자로 바꿈
    ? initaial : 기본값을 설정
    ? inherit : 부모 요소의 속성값을 상속받음
  */

  p.DR_ltr {
    /* 왼쪽 */
    text-align: left;
  }

  p.DR_rtl {
    text-align: right;
    /* 중앙 center 로 속성값을 잡아주면 가운데정렬 */
  }

  /* ! text-align은 inline 관련 속성을 정렬할 수 있다. */
